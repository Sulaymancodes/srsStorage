<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cave - Home</title>
    <style>
        :root {
            --primary-color: #3b82f6;
            --secondary-color: #60a5fa;
            --background-dark: #0f172a;
            --background-light: #1e293b;
            --text-color: #e2e8f0;
            --text-muted: #94a3b8;
            --card-background: #1e293b;
            --border-color: #334155;
            --danger-color: #ef4444;
            --success-color: #22c55e;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: var(--background-dark);
            min-height: 100vh;
        }

        nav {
            background-color: var(--background-light);
            padding: 1rem 2rem;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            color: var(--primary-color);
            font-size: 1.5rem;
            font-weight: bold;
            text-decoration: none;
        }

        .logout-btn {
            color: var(--text-muted);
            text-decoration: none;
            padding: 0.5rem 1rem;
            border: 1px solid var(--border-color);
            border-radius: 0.375rem;
            transition: all 0.3s ease;
        }

        .logout-btn:hover {
            background-color: var(--background-dark);
            color: var(--text-color);
        }

        main {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        h1 {
            font-size: 2rem;
            margin-bottom: 2rem;
            color: var(--primary-color);
        }

        h2 {
            font-size: 1.5rem;
            margin: 2rem 0 1rem;
            color: var(--text-color);
        }

        .folder-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 1.5rem;
        }

        .folder-card {
            background-color: var(--card-background);
            border: 1px solid var(--border-color);
            border-radius: 0.5rem;
            padding: 1rem;
            transition: all 0.3s ease;
        }

        .folder-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .folder-link {
            color: var(--text-color);
            text-decoration: none;
            font-size: 1.125rem;
            font-weight: 500;
            display: block;
            margin-bottom: 1rem;
        }

        .folder-link:hover {
            color: var(--primary-color);
        }

        .folder-actions {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
        }

        button {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 0.375rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: var(--text-color);
        }

        .btn-primary:hover {
            background-color: var(--secondary-color);
        }

        .btn-secondary {
            background-color: var(--background-dark);
            color: var(--text-color);
            border: 1px solid var(--border-color);
        }

        .btn-secondary:hover {
            background-color: var(--background-light);
        }

        .btn-danger {
            background-color: var(--danger-color);
            color: var(--text-color);
        }

        .btn-danger:hover {
            opacity: 0.9;
        }

        dialog {
            background-color: var(--card-background);
            border: 1px solid var(--border-color);
            border-radius: 0.75rem;
            padding: 2rem;
            color: var(--text-color);
            max-width: 400px;
            width: 90%;
            position: fixed; /* Ensures the dialog is fixed relative to the viewport */
            top: 50%; /* Centers vertically */
            left: 50%; /* Centers horizontally */
            transform: translate(-50%, -50%); /* Offsets the dialog by half its width and height */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        dialog::backdrop {
            background-color: rgba(0, 0, 0, 0.5);
        }


        dialog form {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        dialog h1 {
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
        }

        dialog input {
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            background-color: var(--background-dark);
            border-radius: 0.375rem;
            color: var(--text-color);
        }

        dialog input:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        .empty-state {
            text-align: center;
            color: var(--text-muted);
            padding: 3rem;
            background-color: var(--card-background);
            border-radius: 0.5rem;
            border: 1px solid var(--border-color);
        }
    </style>
</head>
<body>
    <nav>
        <a href="/" class="logo">Cave</a>
        <a href="/log-out" class="logout-btn">Logout</a>
    </nav>

    <main>
        <h1>Welcome, <%= username %>!</h1>
        <button id="create-folder-btn" class="btn-primary">Add a Folder</button>

        <dialog id="create-folder">
            <form action="/create-folder" method="post">
                <h1>Create Folder</h1>
                <input type="text" name="folderName" placeholder="Enter folder name" required />
                <div class="folder-actions">
                    <button type="submit" class="btn-primary">Create</button>
                    <button type="button" id="close-popup" class="btn-secondary">Cancel</button>
                </div>
            </form>
        </dialog>

        <h2>Your Folders</h2>
        <% if (folders.length > 0) { %>
            <div class="folder-grid">
                <% folders.forEach((folder, index) => { %>
                    <div class="folder-card">
                        <a href="/<%= folder.id %>/folder" class="folder-link"><%= folder.name %></a>
                        
                        <div class="folder-actions">
                            <button class="btn-secondary update-btn" data-index="<%= index %>">Edit</button>
                            <form action="/delete-folder/<%= folder.id %>" method="post" style="display:inline;">
                                <button type="submit" class="btn-danger" onclick="return confirm('Are you sure you want to delete this folder?');">Delete</button>
                            </form>
                        </div>

                        <dialog id="update-folder-form-<%= index %>">
                            <form action="/update-folder/<%= folder.id %>" method="post">
                                <h1>Update Folder</h1>
                                <input type="text" name="newName" value="<%= folder.name %>" required />
                                <div class="folder-actions">
                                    <button type="submit" class="btn-primary">Update</button>
                                    <button type="button" class="close-update-form-popup btn-secondary" data-index="<%= index %>">Cancel</button>
                                </div>
                            </form>
                        </dialog>
                    </div>
                <% }) %>
            </div>
        <% } else { %>
            <div class="empty-state">
                <p>No folders yet. Click the Add a Folder button to create one.</p>
            </div>
        <% } %>
    </main>

    <script>
        // Create folder dialog
        const folderDialogue = document.getElementById("create-folder");
        const createFolderBtn = document.getElementById("create-folder-btn");
        const closeBtn = document.getElementById("close-popup");

        createFolderBtn.addEventListener("click", () => {
            folderDialogue.showModal();
        });

        closeBtn.addEventListener("click", () => {
            folderDialogue.close();
        });

        // Update folder dialogs
        const updateBtns = document.querySelectorAll(".update-btn");
        updateBtns.forEach((btn) => {
            btn.addEventListener("click", () => {
                const index = btn.getAttribute("data-index");
                const dialog = document.getElementById(`update-folder-form-${index}`);
                dialog.showModal();
            });
        });

        const closeUpdateBtns = document.querySelectorAll(".close-update-form-popup");
        closeUpdateBtns.forEach((btn) => {
            btn.addEventListener("click", () => {
                const index = btn.getAttribute("data-index");
                const dialog = document.getElementById(`update-folder-form-${index}`);
                dialog.close();
            });
        });

        // Close dialogs when clicking outside
        const dialogs = document.querySelectorAll('dialog');
        dialogs.forEach(dialog => {
            dialog.addEventListener('click', (e) => {
                const dialogDimensions = dialog.getBoundingClientRect();
                if (
                    e.clientX < dialogDimensions.left ||
                    e.clientX > dialogDimensions.right ||
                    e.clientY < dialogDimensions.top ||
                    e.clientY > dialogDimensions.bottom
                ) {
                    dialog.close();
                }
            });
        });
    </script>
</body>
</html>